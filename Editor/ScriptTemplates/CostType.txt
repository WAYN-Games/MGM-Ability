using Unity.Entities;

using _NAMESPACE_;

using WaynGroup.Mgm.Ability;

[assembly: RegisterGenericJobType(typeof(AbilityCostCheckerSystem<#SCRIPTNAME#, _RESOURCE_, #SCRIPTNAME#Handler>.CostHandlerJob))]
[assembly: RegisterGenericJobType(typeof(AbilityCostConsumerSystem<#SCRIPTNAME#, _RESOURCE_, #SCRIPTNAME#Handler>.CostHandlerJob))]

namespace _NAMESPACE_
{
    public struct #SCRIPTNAME# : IAbilityCost
    {
        public float Cost;
    }

    public struct #SCRIPTNAME#Handler : ICostHandler<#SCRIPTNAME#, _RESOURCE_>
    {
        public void ConsumeCost(#SCRIPTNAME# cost, ref _RESOURCE_ resource)
        {
            resource.Value -= cost.Cost;
        }

        public bool HasEnougthResourceLeft(#SCRIPTNAME# cost, in _RESOURCE_ resource)
        {
            return resource.Value >= cost.Cost;
        }
    }

    public class #SCRIPTNAME#CheckerSystem : AbilityCostCheckerSystem<#SCRIPTNAME#, Mana, #SCRIPTNAME#Handler>
    {
    }
    public class #SCRIPTNAME#ConsumerSystem : AbilityCostConsumerSystem<#SCRIPTNAME#, Mana, #SCRIPTNAME#Handler>
    {
    }

}
